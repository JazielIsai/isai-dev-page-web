{"version":3,"sources":["chart.js","menuItems.js","overlayForm.js","typed.js"],"names":["ctx","document","getElementById","getContext","myChart","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","borderRadius","options","indexAxis","scales","y","beginAtZero","menuToggle","nav","toggle","classList","$inputList","querySelectorAll","$textarea","querySelector","$overlay","focus","event","console","log","target","add","blur","remove","forEach","$input","addEventListener","$maybeIsAnInput","elementFromPoint","clientX","clientY","tagName","typed","Typed","strings","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","backDelay","loop","loopCount","showCursor","cursorChar","contentType","typedProyect"],"mappings":"AAAA,MAAAA,IAAAC,SAAAC,eAAA,WAAAC,WAAA,MACAC,QAAA,IAAAC,MAAAL,IAAA,CACAM,KAAA,MACAC,KAAA,CACAC,OAAA,CAAA,KAAA,MAAA,aAAA,SAAA,QAAA,UAAA,QAAA,OACAC,SAAA,CAAA,CACAC,MAAA,SACAH,KAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAI,gBAAA,CACA,2BAEAC,YAAA,CACA,yBAEAC,YAAA,EACAC,aAAA,KAGAC,QAAA,CACAC,UAAA,IACAC,OAAA,CACAC,EAAA,CACAC,aAAA,OCTA,SAAAC,aACA,IAAAC,EAAApB,SAAAC,eAAA,OACAoB,EAAArB,SAAAC,eAAA,UACAmB,EAAAE,UAAAD,OAAA,UACAA,EAAAC,UAAAD,OAAA,UCjBA,MAAAE,WAAAvB,SAAAwB,iBAAA,SACAC,UAAAzB,SAAA0B,cAAA,YACAC,SAAA3B,SAAA0B,cAAA,YAmBA,SAAAE,MAAAC,GACAC,QAAAC,IAAA,SACAF,EAAAG,OAAAV,UAAAW,IAAA,aACAN,SAAAL,UAAAW,IAAA,aAGA,SAAAC,KAAAL,GACAC,QAAAC,IAAA,QACAF,EAAAG,OAAAV,UAAAa,OAAA,aAzBAZ,WAAAa,QAAAC,IACAA,EAAAC,iBAAA,QAAAV,OACAS,EAAAC,iBAAA,OAAAJ,QAGAT,UAAAa,iBAAA,QAAAV,OACAH,UAAAa,iBAAA,OAAAJ,MAEAP,SAAAW,iBAAA,QAAAT,IACAC,QAAAC,IAAAF,GACAF,SAAAL,UAAAa,OAAA,aACA,MAAAI,EAAAvC,SAAAwC,iBAAAX,EAAAY,QAAAZ,EAAAa,SACA,UAAAH,EAAAI,SAAA,aAAAJ,EAAAI,SACAJ,EAAAX,UCjBA,MAAAgB,MAAA,IAAAC,MAAA,gBAAA,CACAC,QAAA,CACA,2BACA,6BACA,6CACA,qCACA,iCACA,+BACA,kCACA,gCACA,+BAEAC,eAAA,kBACAC,UAAA,GACAC,WAAA,IACAC,UAAA,GACAC,gBAAA,EACAC,SAAA,EACAC,UAAA,KACAC,MAAA,EACAC,WAAA,EACAC,YAAA,EACAC,WAAA,GACAC,YAAA,SAQAC,aAAA,IAAAd,MAAA,kBAAA,CACAC,QAAA,CACA,kHACA,gFACA,gFACA,0FACA,+CAEAC,eAAA,eACAC,UAAA,GACAC,WAAA,IACAC,UAAA,GACAC,gBAAA,EACAC,SAAA,EACAC,UAAA,KACAC,MAAA,EACAC,WAAA,EACAC,YAAA,EACAC,WAAA,GACAC,YAAA","file":"main.js","sourcesContent":["const ctx = document.getElementById('myChart').getContext('2d');\nconst myChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n        labels: ['c#', 'SQL', 'JavaScript', 'HTML 5', 'CSS 3', 'Node js', 'React', 'PHP'],\n        datasets: [{\n            label: 'Skills',\n            data: [60, 50, 50, 40, 40, 30, 50, 40, 100],\n            backgroundColor: [\n                'rgba(54, 162, 235, 0.2)'\n            ],\n            borderColor: [\n                'rgba(54, 162, 235, 1)'\n            ],\n            borderWidth: 1,\n            borderRadius: 5,\n        }]\n    },\n    options: {\n        indexAxis: 'y',\n        scales: {\n            y: {\n                beginAtZero: true\n            }\n        }\n    }\n});","/*\naddEventListener('DOMContentLoaded', () => {\n    const btnMenu = document.querySelector('.img-menu-icono');\n    if(btnMenu) {\n        btnMenu.addEventListener('click', () =>{\n            const menuItems = document.querySelector('.menu');\n            menuItems.classList.toggle('menu-toggle');\n        })\n    }\n});\n*/\n\n\nfunction menuToggle() {\n    var nav = document.getElementById(\"nav\")\n    var toggle = document.getElementById(\"toggle\")\n    nav.classList.toggle(\"active\")\n    toggle.classList.toggle(\"active\")\n    \n\n}","const $inputList = document.querySelectorAll('input');\nconst $textarea = document.querySelector('textarea');\nconst $overlay = document.querySelector('#overlay');\n\n$inputList.forEach($input => {\n    $input.addEventListener('focus', focus);\n    $input.addEventListener('blur', blur);\n});\n\n$textarea.addEventListener('focus', focus);\n$textarea.addEventListener('blur', blur);\n\n$overlay.addEventListener('click', (event)=> {\n    console.log(event);\n    $overlay.classList.remove('is-active');\n    const $maybeIsAnInput = document.elementFromPoint(event.clientX, event.clientY);\n    if($maybeIsAnInput.tagName === 'INPUT' || $maybeIsAnInput.tagName === 'TEXTAREA'){\n        $maybeIsAnInput.focus();\n    }\n});\n\nfunction focus(event) {\n    console.log('focus');\n    event.target.classList.add('is-active');\n    $overlay.classList.add('is-active');\n}\n\nfunction blur(event) { \n    console.log('blur');\n    event.target.classList.remove('is-active');\n}","const typed = new Typed('.typed-skills', {\n    strings: [\n        '<i class=\"skills\">  </i>',\n        '<i class=\"skills\"> C# </i>',\n        '<i class=\"skills\"> SQL Server - MySql </i>',\n        '<i class=\"skills\"> JavaScript </i>', \n        '<i class=\"skills\"> HTML 5 </i>', \n        '<i class=\"skills\"> CSS3 </i>', \n        '<i class=\"skills\"> Node JS </i>', \n        '<i class=\"skills\"> React </i>',\n        '<i class=\"skills\"> PHP </i>'\n    ],\n    stringsElement: '#cadenasdetexto',\n    typeSpeed: 75, //Velocidad en milesegundos para poner una letra,\n    startDelay: 300, //Tiempo de retraso en iniciar la animacion. Aplica tambien cuando termina y vuelve a iniciar.\n    backSpeed: 75, //Velocidad en milesegundos para borrar una letra\n    smartBackspace: true, //Eliminar solamente las palabras que sean nuevas en una cadena de texto.\n    shuffle: false, //Alterar el orden en el que se escribe las palabras,\n    backDelay: 1500, //Tiempo de espera despues de que termine de escribir una palabra\n    loop: true, //Repite el array de strings\n    loopCount: false, //Cantidad de veces a repetir el array de strings //false es infinito\n    showCursor: true, //Mostrar cursor palpitando\n    cursorChar: '', //Caracter para el cursor\n    contentType: 'html', //html o null para texto sin formato\n\n});\n\n\n\n\n//Typed para los proyectos que he realizado con mis skills\nconst typedProyect = new Typed('.typed-proyects', {\n    strings: [\n        '<i class=\"proyect\"> Con C# y SQL Server o MySql he realizado 3 aplicaciones CRUD y algunos otros proyectos </i>',\n        '<i class=\"proyect\"> Con HTML 5, CSS3 y JavaScript diferentes paginas web </i>',\n        '<i class=\"proyect\"> Con JavaScript y Node JS y Mongo DB una API Restfull </i>',\n        '<i class=\"proyect\"> Con React he realizado mi blog personal y un proyecto de citas </i>',\n        '<i class=\"proyect\"> entre otras cosas. </i>'\n    ],\n    stringsElement: '#projectText',\n    typeSpeed: 75, //Velocidad en milesegundos para poner una letra,\n    startDelay: 300, //Tiempo de retraso en iniciar la animacion. Aplica tambien cuando termina y vuelve a iniciar.\n    backSpeed: 25, //Velocidad en milesegundos para borrar una letra\n    smartBackspace: true, //Eliminar solamente las palabras que sean nuevas en una cadena de texto.\n    shuffle: false, //Alterar el orden en el que se escribe las palabras,\n    backDelay: 1500, //Tiempo de espera despues de que termine de escribir una palabra\n    loop: true, //Repite el array de strings\n    loopCount: false, //Cantidad de veces a repetir el array de strings //false es infinito\n    showCursor: true, //Mostrar cursor palpitando\n    cursorChar: '', //Caracter para el cursor\n    contentType: 'html', //html o null para texto sin formato\n});"]}